[{"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/index.tsx":"1","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/App.tsx":"2","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/Providers.tsx":"3","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/style/Global.tsx":"4","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/PageLoader.tsx":"5","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/NotFound.tsx":"6","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Buy.tsx":"7","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/hooks.ts":"8","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/index.ts":"9","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/index.ts":"10","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/index.ts":"11","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/index.ts":"12","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/index.ts":"13","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/index.ts":"14","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/getRpcUrl.ts":"15","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Menu/index.tsx":"16","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/index.tsx":"17","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/ThemeContext.tsx":"18","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/BlockContext.tsx":"19","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/RefreshContext.tsx":"20","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/Localisation/languageContext.tsx":"21","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/layout/Page.tsx":"22","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/index.ts":"23","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/actions.ts":"24","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/types.ts":"25","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Menu/config.ts":"26","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/Home.tsx":"27","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/Syrup.tsx":"28","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/Farms.tsx":"29","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/BuyHonest.tsx":"30","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/Liquidity.tsx":"31","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/Teaser.tsx":"32","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useI18n.ts":"33","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/CurrentIfo.tsx":"34","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/components/Hero.tsx":"35","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/layout/Container.tsx":"36","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useRefresh.ts":"37","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useTheme.ts":"38","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/web3.ts":"39","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/Localisation/translationsContext.ts":"40","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/translateTextHelpers.ts":"41","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/localisation/languageCodes.ts":"42","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/Metamask.tsx":"43","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/Coming.tsx":"44","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/components/IfoTabButtons/index.tsx":"45","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/Divider.tsx":"46","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/components/Title.tsx":"47","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/FarmCard.tsx":"48","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/FarmCard.tsx":"49","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/FarmCard.tsx":"50","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/FarmCard.tsx":"51","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/Divider.tsx":"52","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/PoolCard.tsx":"53","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/TwitterCard.tsx":"54","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/TotalValueLockedCard.tsx":"55","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/FarmStakingCard.tsx":"56","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CakeStats.tsx":"57","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/pools/index.ts":"58","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/farms/index.ts":"59","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/formatBalance.ts":"60","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmTabButtons/index.tsx":"61","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useBlock.ts":"62","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/Card.tsx":"63","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/layout/Flex.tsx":"64","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/CardTitle.tsx":"65","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/PoolTabButtons/index.tsx":"66","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/ApyButton.tsx":"67","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/CardHeading.tsx":"68","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/CardActionsContainer.tsx":"69","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/ApyButton.tsx":"70","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/CardActionsContainer.tsx":"71","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/CardHeading.tsx":"72","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/CardFooter.tsx":"73","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CardValue.tsx":"74","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/pools/fetchPoolsUser.ts":"75","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/pools/fetchPools.ts":"76","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/index.ts":"77","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/farms/fetchFarmUser.ts":"78","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/index.ts":"79","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/farms/fetchFarms.ts":"80","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Tags.tsx":"81","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/addressHelpers.ts":"82","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useTokenBalance.ts":"83","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/ApyCalculatorModal.tsx":"84","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/HarvestAction.tsx":"85","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/StakeAction.tsx":"86","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx":"87","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/HarvestAction.tsx":"88","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/StakeAction.tsx":"89","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/pools.ts":"90","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CakeWalletBalance.tsx":"91","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CakeHarvestBalance.tsx":"92","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/ifo.ts":"93","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/farms.ts":"94","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useApprove.ts":"95","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useStake.ts":"96","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/erc20.ts":"97","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/UnlockButton.tsx":"98","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Balance.tsx":"99","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/multicall.ts":"100","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/WithdrawModal.tsx":"101","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/WithdrawModal.tsx":"102","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/DepositModal.tsx":"103","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/contracts.ts":"104","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/DepositModal.tsx":"105","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useContract.ts":"106","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/compoundApyHelpers.ts":"107","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useUnstake.ts":"108","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useHarvest.ts":"109","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/getLiquidityUrlPathParts.ts":"110","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/callHelpers.ts":"111","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useWeb3.ts":"112","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/TokenInput/index.ts":"113","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/ModalActions/index.ts":"114","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/ModalActions/ModalActions.tsx":"115","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/TokenInput/TokenInput.tsx":"116","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Input/index.ts":"117","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Spacer/index.ts":"118","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Spacer/Spacer.tsx":"119","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Input/Input.tsx":"120","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/HarvestButton.tsx":"121","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/OldSyrupTitle.tsx":"122","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/WithdrawModal.tsx":"123","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/DepositModal.tsx":"124","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/DetailsSection.tsx":"125","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/CardActionsContainer.tsx":"126","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/ApyButton.tsx":"127","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/CardHeading.tsx":"128","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/DetailsSection.tsx":"129","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/ApyButton.tsx":"130","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/CardActionsContainer.tsx":"131","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/CardHeading.tsx":"132","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/DetailsSection.tsx":"133","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useFarmsWithBalance.ts":"134","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/HarvestAction.tsx":"135","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/StakeAction.tsx":"136","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/ApyCalculatorModal.tsx":"137","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/ApyCalculatorModal.tsx":"138","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/StakeAction.tsx":"139","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/HarvestAction.tsx":"140","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Label/index.ts":"141","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/ExpandableSectionButton/index.ts":"142","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/DepositModal.tsx":"143","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/WithdrawModal.tsx":"144","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/DepositModal.tsx":"145","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/WithdrawModal.tsx":"146","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Label/Label.tsx":"147","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx":"148"},{"size":265,"mtime":1625062697259,"results":"149","hashOfConfig":"150"},{"size":2932,"mtime":1625062871689,"results":"151","hashOfConfig":"150"},{"size":1354,"mtime":1625062697255,"results":"152","hashOfConfig":"150"},{"size":901,"mtime":1625062697259,"results":"153","hashOfConfig":"150"},{"size":377,"mtime":1625062697255,"results":"154","hashOfConfig":"150"},{"size":824,"mtime":1625062697275,"results":"155","hashOfConfig":"150"},{"size":1033,"mtime":1625062697267,"results":"156","hashOfConfig":"150"},{"size":4172,"mtime":1625062697259,"results":"157","hashOfConfig":"150"},{"size":33,"mtime":1625062697271,"results":"158","hashOfConfig":"150"},{"size":34,"mtime":1625062697271,"results":"159","hashOfConfig":"150"},{"size":34,"mtime":1625062697275,"results":"160","hashOfConfig":"150"},{"size":38,"mtime":1625062697267,"results":"161","hashOfConfig":"150"},{"size":38,"mtime":1625062697271,"results":"162","hashOfConfig":"150"},{"size":35,"mtime":1625062697275,"results":"163","hashOfConfig":"150"},{"size":318,"mtime":1625062697267,"results":"164","hashOfConfig":"150"},{"size":1084,"mtime":1625062697255,"results":"165","hashOfConfig":"150"},{"size":545,"mtime":1625062697271,"results":"166","hashOfConfig":"150"},{"size":909,"mtime":1625062697259,"results":"167","hashOfConfig":"150"},{"size":746,"mtime":1625062697259,"results":"168","hashOfConfig":"150"},{"size":1173,"mtime":1625062697259,"results":"169","hashOfConfig":"150"},{"size":3139,"mtime":1625062697259,"results":"170","hashOfConfig":"150"},{"size":406,"mtime":1625062697259,"results":"171","hashOfConfig":"150"},{"size":275,"mtime":1625062697259,"results":"172","hashOfConfig":"150"},{"size":256,"mtime":1625062697259,"results":"173","hashOfConfig":"150"},{"size":1833,"mtime":1625062697259,"results":"174","hashOfConfig":"150"},{"size":1922,"mtime":1625067168276,"results":"175","hashOfConfig":"150"},{"size":3207,"mtime":1625068735302,"results":"176","hashOfConfig":"150"},{"size":4508,"mtime":1625062697275,"results":"177","hashOfConfig":"150"},{"size":5081,"mtime":1625066560314,"results":"178","hashOfConfig":"150"},{"size":4226,"mtime":1625062697267,"results":"179","hashOfConfig":"150"},{"size":4267,"mtime":1625062697271,"results":"180","hashOfConfig":"150"},{"size":4798,"mtime":1625062697275,"results":"181","hashOfConfig":"150"},{"size":547,"mtime":1625062697259,"results":"182","hashOfConfig":"150"},{"size":3674,"mtime":1625062697271,"results":"183","hashOfConfig":"150"},{"size":837,"mtime":1625062697271,"results":"184","hashOfConfig":"150"},{"size":304,"mtime":1625062697259,"results":"185","hashOfConfig":"150"},{"size":279,"mtime":1625062697259,"results":"186","hashOfConfig":"150"},{"size":360,"mtime":1625062697259,"results":"187","hashOfConfig":"150"},{"size":842,"mtime":1625062697267,"results":"188","hashOfConfig":"150"},{"size":391,"mtime":1625062697259,"results":"189","hashOfConfig":"150"},{"size":1574,"mtime":1625062697267,"results":"190","hashOfConfig":"150"},{"size":1976,"mtime":1625062697259,"results":"191","hashOfConfig":"150"},{"size":3917,"mtime":1625062697271,"results":"192","hashOfConfig":"150"},{"size":1967,"mtime":1625062697275,"results":"193","hashOfConfig":"150"},{"size":758,"mtime":1625062697271,"results":"194","hashOfConfig":"150"},{"size":185,"mtime":1625062697267,"results":"195","hashOfConfig":"150"},{"size":241,"mtime":1625062697271,"results":"196","hashOfConfig":"150"},{"size":6347,"mtime":1625062697267,"results":"197","hashOfConfig":"150"},{"size":6347,"mtime":1625062697271,"results":"198","hashOfConfig":"150"},{"size":6347,"mtime":1625062697275,"results":"199","hashOfConfig":"150"},{"size":5496,"mtime":1625062697267,"results":"200","hashOfConfig":"150"},{"size":185,"mtime":1625062697275,"results":"201","hashOfConfig":"150"},{"size":8523,"mtime":1625062697275,"results":"202","hashOfConfig":"150"},{"size":2324,"mtime":1625044885123,"results":"203","hashOfConfig":"150"},{"size":1476,"mtime":1625062697271,"results":"204","hashOfConfig":"150"},{"size":3618,"mtime":1625062697271,"results":"205","hashOfConfig":"150"},{"size":4576,"mtime":1625062697271,"results":"206","hashOfConfig":"150"},{"size":3725,"mtime":1625062697259,"results":"207","hashOfConfig":"150"},{"size":2070,"mtime":1625062697259,"results":"208","hashOfConfig":"150"},{"size":475,"mtime":1625062697267,"results":"209","hashOfConfig":"150"},{"size":1273,"mtime":1625062697267,"results":"210","hashOfConfig":"150"},{"size":205,"mtime":1625062697259,"results":"211","hashOfConfig":"150"},{"size":677,"mtime":1625062697275,"results":"212","hashOfConfig":"150"},{"size":282,"mtime":1625062697259,"results":"213","hashOfConfig":"150"},{"size":344,"mtime":1625062697275,"results":"214","hashOfConfig":"150"},{"size":878,"mtime":1625062697275,"results":"215","hashOfConfig":"150"},{"size":1009,"mtime":1625062697275,"results":"216","hashOfConfig":"150"},{"size":1287,"mtime":1625062697275,"results":"217","hashOfConfig":"150"},{"size":3140,"mtime":1625062697275,"results":"218","hashOfConfig":"150"},{"size":1009,"mtime":1625062697267,"results":"219","hashOfConfig":"150"},{"size":3140,"mtime":1625062697267,"results":"220","hashOfConfig":"150"},{"size":1287,"mtime":1625062697267,"results":"221","hashOfConfig":"150"},{"size":3238,"mtime":1625062697275,"results":"222","hashOfConfig":"150"},{"size":835,"mtime":1625062697271,"results":"223","hashOfConfig":"150"},{"size":2723,"mtime":1625062697259,"results":"224","hashOfConfig":"150"},{"size":1521,"mtime":1625062697259,"results":"225","hashOfConfig":"150"},{"size":285,"mtime":1625062697259,"results":"226","hashOfConfig":"150"},{"size":2459,"mtime":1625062697259,"results":"227","hashOfConfig":"150"},{"size":272,"mtime":1625062697259,"results":"228","hashOfConfig":"150"},{"size":4548,"mtime":1625062697259,"results":"229","hashOfConfig":"150"},{"size":785,"mtime":1625062697255,"results":"230","hashOfConfig":"150"},{"size":659,"mtime":1625062697267,"results":"231","hashOfConfig":"150"},{"size":3469,"mtime":1625062697259,"results":"232","hashOfConfig":"150"},{"size":4599,"mtime":1625062697275,"results":"233","hashOfConfig":"150"},{"size":1975,"mtime":1625062697275,"results":"234","hashOfConfig":"150"},{"size":2083,"mtime":1625062697275,"results":"235","hashOfConfig":"150"},{"size":4599,"mtime":1625062697267,"results":"236","hashOfConfig":"150"},{"size":1517,"mtime":1625062697267,"results":"237","hashOfConfig":"150"},{"size":2083,"mtime":1625062697267,"results":"238","hashOfConfig":"150"},{"size":18123,"mtime":1625062697259,"results":"239","hashOfConfig":"150"},{"size":740,"mtime":1625062697271,"results":"240","hashOfConfig":"150"},{"size":652,"mtime":1625062697271,"results":"241","hashOfConfig":"150"},{"size":4602,"mtime":1625062697259,"results":"242","hashOfConfig":"150"},{"size":3168,"mtime":1625066957256,"results":"243","hashOfConfig":"150"},{"size":2950,"mtime":1625062697259,"results":"244","hashOfConfig":"150"},{"size":1465,"mtime":1625062697259,"results":"245","hashOfConfig":"150"},{"size":1067,"mtime":1625062697267,"results":"246","hashOfConfig":"150"},{"size":527,"mtime":1625062697259,"results":"247","hashOfConfig":"150"},{"size":1097,"mtime":1625062697255,"results":"248","hashOfConfig":"150"},{"size":939,"mtime":1625062697267,"results":"249","hashOfConfig":"150"},{"size":1850,"mtime":1625062697275,"results":"250","hashOfConfig":"150"},{"size":1850,"mtime":1625062697267,"results":"251","hashOfConfig":"150"},{"size":1957,"mtime":1625062697267,"results":"252","hashOfConfig":"150"},{"size":1251,"mtime":1625062697259,"results":"253","hashOfConfig":"150"},{"size":1957,"mtime":1625062697275,"results":"254","hashOfConfig":"150"},{"size":2993,"mtime":1625062697259,"results":"255","hashOfConfig":"150"},{"size":1293,"mtime":1625062697267,"results":"256","hashOfConfig":"150"},{"size":1491,"mtime":1625062697259,"results":"257","hashOfConfig":"150"},{"size":1826,"mtime":1625062697259,"results":"258","hashOfConfig":"150"},{"size":573,"mtime":1625062697267,"results":"259","hashOfConfig":"150"},{"size":4310,"mtime":1625062697267,"results":"260","hashOfConfig":"150"},{"size":992,"mtime":1625062697259,"results":"261","hashOfConfig":"150"},{"size":39,"mtime":1625062697259,"results":"262","hashOfConfig":"150"},{"size":41,"mtime":1625062697255,"results":"263","hashOfConfig":"150"},{"size":764,"mtime":1625062697255,"results":"264","hashOfConfig":"150"},{"size":2007,"mtime":1625062697259,"results":"265","hashOfConfig":"150"},{"size":76,"mtime":1625062697255,"results":"266","hashOfConfig":"150"},{"size":35,"mtime":1625062697255,"results":"267","hashOfConfig":"150"},{"size":686,"mtime":1625062697255,"results":"268","hashOfConfig":"150"},{"size":1120,"mtime":1625062697255,"results":"269","hashOfConfig":"150"},{"size":3083,"mtime":1625062697275,"results":"270","hashOfConfig":"150"},{"size":842,"mtime":1625062697275,"results":"271","hashOfConfig":"150"},{"size":1877,"mtime":1625062697275,"results":"272","hashOfConfig":"150"},{"size":2015,"mtime":1625062697275,"results":"273","hashOfConfig":"150"},{"size":2115,"mtime":1625062697275,"results":"274","hashOfConfig":"150"},{"size":3140,"mtime":1625062697271,"results":"275","hashOfConfig":"150"},{"size":1009,"mtime":1625062697271,"results":"276","hashOfConfig":"150"},{"size":1287,"mtime":1625062697271,"results":"277","hashOfConfig":"150"},{"size":2115,"mtime":1625062697271,"results":"278","hashOfConfig":"150"},{"size":1009,"mtime":1625062697267,"results":"279","hashOfConfig":"150"},{"size":3140,"mtime":1625062697267,"results":"280","hashOfConfig":"150"},{"size":1287,"mtime":1625062697267,"results":"281","hashOfConfig":"150"},{"size":2115,"mtime":1625062697267,"results":"282","hashOfConfig":"150"},{"size":1295,"mtime":1625062697259,"results":"283","hashOfConfig":"150"},{"size":1975,"mtime":1625062697271,"results":"284","hashOfConfig":"150"},{"size":2083,"mtime":1625062697271,"results":"285","hashOfConfig":"150"},{"size":4599,"mtime":1625062697271,"results":"286","hashOfConfig":"150"},{"size":4599,"mtime":1625062697267,"results":"287","hashOfConfig":"150"},{"size":2083,"mtime":1625062697267,"results":"288","hashOfConfig":"150"},{"size":1975,"mtime":1625062697267,"results":"289","hashOfConfig":"150"},{"size":34,"mtime":1625062697255,"results":"290","hashOfConfig":"150"},{"size":52,"mtime":1625062697255,"results":"291","hashOfConfig":"150"},{"size":1957,"mtime":1625062697271,"results":"292","hashOfConfig":"150"},{"size":1850,"mtime":1625062697271,"results":"293","hashOfConfig":"150"},{"size":1957,"mtime":1625062697267,"results":"294","hashOfConfig":"150"},{"size":1850,"mtime":1625062697267,"results":"295","hashOfConfig":"150"},{"size":460,"mtime":1625062697255,"results":"296","hashOfConfig":"150"},{"size":902,"mtime":1625062697255,"results":"297","hashOfConfig":"150"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"gs6zaa",{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"300"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"300"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"300"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"300"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"300"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"300"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"300"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"300"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"300"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"300"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"300"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"300"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"300"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"300"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"300"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"300"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"300"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"300"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"300"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"300"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"300"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"300"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"300"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"300"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"300"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"300"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"300"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"300"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"300"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"300"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"300"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"300"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"300"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/index.tsx",[],["620","621","622","623","624"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/App.tsx",["625","626","627"],"import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS, Image } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\nconst Pools = lazy(() => import('./views/Pools'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Buy = lazy(() => import('./views/Buy'))\nconst Trade = lazy(() => import('./views/BuyNow'))\nconst Liquidity = lazy(() => import('./views/Liquidity'))\nconst Launchpad = lazy(() => import('./views/Teaser'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode />\n            </Route>\n            <Route path=\"/kitchenpools\">\n              <Pools />\n            </Route>\n            <Route path=\"/buy\">\n              <Trade />\n            </Route>\n            <Route path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route path=\"/ido\">\n              <Ifos />\n            </Route>\n            <Route path=\"/nft\">\n              <Launchpad />\n            </Route>\n\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/Providers.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/style/Global.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/PageLoader.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/NotFound.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Buy.tsx",["628","629","630","631","632","633"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Text, LogoIcon, LinkExternal, Link } from '@pancakeswap-libs/uikit'\nimport Page from 'components/layout/Page'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 64px);\n  justify-content: center;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: heavy;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst NotFound = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <LinkExternal href='https://quickswap.exchange/#/swap?inputCurrency=honest'>BUY honest!</LinkExternal>\n      </StyledNotFound>\n    </Page>\n  )\n}\n\nexport default NotFound\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/hooks.ts",["634","635","636"],"import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 1 // matic-usdc LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBnb = (): BigNumber => {\n  const pid = 2 // honest-Matic LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // honest-USDC LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const usePriceWethBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 5; // WETH-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  const wethPrice = usePriceWethBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }\n      // else if (farm.quoteTokenSymbol === QuoteToken.BUSD) {\n      //  val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      // }\n      else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n\n    }\n  }\n  return value;\n}","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/getRpcUrl.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Menu/index.tsx",["637","638"],"import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n     \n      \n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd}\n      links={config}\n      priceLink=\"https://quickchart.app/token/0x4dA646B71014332AE8370017d05205346d3ca50A\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/index.tsx",["639","640","641","642"],"import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\nimport ComingSoon from './ComingSoon'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <CurrentIfo/>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/ThemeContext.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/BlockContext.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/RefreshContext.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/Localisation/languageContext.tsx",["643","644"],"import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/layout/Page.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/actions.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/types.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Menu/config.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/Home.tsx",["645","646","647","648","649","650","651","652","653","654","655","656","657","658"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/Syrup.tsx",["659"],"import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport {\n  useFarms,\n  usePriceBnbBusd,\n  usePools,\n} from 'state/hooks'\nimport { QuoteToken } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\nimport Coming from './components/Coming'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB' || tokenName === 'WBNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = priceToBnb(\n      QuoteToken.HONEST,\n      stakingTokenFarm?.tokenPriceVsQuote,\n      stakingTokenFarm?.quoteTokenSymbol,\n    )\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n    // console.log('pool.tokenName', pool.tokenName)\n    // console.log('rewardTokenPriceInBNB', rewardTokenPriceInBNB.toString())\n    // console.log('stakingTokenPriceInBNB', stakingTokenPriceInBNB.toString())\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    let totalStakingTokenInPool = new BigNumber(0)\n    totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n\n    // tokens per block * price of CAKE * blocks_per_year / ( tokens in pool x salt price) * 100\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            Jungle Pools\n          </Heading>\n          <ul>\n            <li>Stake honest to earn new tokens</li>\n            <li>You can unstake at any time.</li>\n            <li>Rewards are calculated per block</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/Farms.tsx",["660","661","662","663","664","665","666"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/BuyHonest.tsx",["667","668","669","670","671","672","673","674","675","676","677","678","679","680","681"],"import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => { \n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid !== 8)\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid !== 8)\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      // let userTotalTVL = new BigNumber(0);\n      // let userAllowance = 0;\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const cakeRewardPerBlock = new BigNumber(farm.honestPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        // if (farm.userData) {\n        //   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\n        //   userTotalTVL = userTotalTVL.plus(userShare)\n        //   const userWL = Whitelist.find(add => add.wallet === account);\n        //   userAllowance = userWL.allowance\n        // }\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n  return (\n    <Page>\n      <iframe src=\"https://quickswap.exchange/#/swap?inputCurrency=0x4da646b71014332ae8370017d05205346d3ca50a\" title=\"Buy honest\" height='700px' width=\"100%\"/>\n    </Page>\n  )\n}\n\nexport default Farms\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/Liquidity.tsx",["682","683","684","685","686","687","688","689","690","691","692","693","694","695","696"],"import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => { \n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid !== 8)\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid !== 8)\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      // let userTotalTVL = new BigNumber(0);\n      // let userAllowance = 0;\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const cakeRewardPerBlock = new BigNumber(farm.honestPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        // if (farm.userData) {\n        //   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\n        //   userTotalTVL = userTotalTVL.plus(userShare)\n        //   const userWL = Whitelist.find(add => add.wallet === account);\n        //   userAllowance = userWL.allowance\n        // }\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n  return (\n    <Page>\n      <iframe src=\"https://quickswap.exchange/#/add/0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174/0xb3694901fCa2376c40986c1bf5ffdf8781f49389\" title=\"Add Liquidity to honest\" height='700px' width=\"100%\"/>\n    </Page>\n  )\n}\n\nexport default Farms\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/Teaser.tsx",["697","698","699","700","701","702","703","704","705","706","707","708","709","710"],"import React, { useEffect, useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => { \n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid !== 8)\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid !== 8)\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/egg/3ba.svg');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/egg/9.png');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n  `\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      // let userTotalTVL = new BigNumber(0);\n      // let userAllowance = 0;\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const cakeRewardPerBlock = new BigNumber(farm.honestPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        // if (farm.userData) {\n        //   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\n        //   userTotalTVL = userTotalTVL.plus(userShare)\n        //   const userWL = Whitelist.find(add => add.wallet === account);\n        //   userAllowance = userWL.allowance\n        // }\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n          Frogs NFTs coming soon\n        </Heading>\n      </Hero>\n    </Page>\n  )\n}\n\nexport default Farms\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useI18n.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/CurrentIfo.tsx",["711","712"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport Title from './components/Title'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 20px;\n  margin-top: 30px;\n\n  & > div {\n    grid-column: span 7;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 7;\n    }\n  }\n`\n\nconst FullColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  \n  grid-column: span 12 !important;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    grid-column: span 12 !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-column: span 12 !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-column: span 12 !important;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Cards>\n        <FullColumnWrapper>\n          <Text color=\"secondary\">Disclaimer: Crypto / Defi markets and projects are considered high risk investments. Always do your own research (DYOR) into any project that you invest. You are responsible for your own investing strategy, and should manage your own risk. Only Invest what you can afford to lose!\n          </Text>\n        </FullColumnWrapper>\n      </Cards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>Buy MATIC</li>\n            <li>Wait for the Sale to start</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://polyHonest.finance/buy\" mr=\"16px\">\n              Buy MATIC\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>While the sale is live, commit your MATIC tokens to buy the tokens</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>Claim the tokens you bought, along with any unspent funds.</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n        </div>\n        <div>\n          <div>\n            <Title as=\"h2\">Want to launch your own IDO?</Title>\n            <Text mb={3}>\n              Launch your project with PolyHonest, Polygon Network’s most transparent and active DeFi Platform\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://t.me/polyHonesthead\"\n              external\n            >\n              Contact Us\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/components/Hero.tsx",["713"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  text-align: center;\n`\n\nconst Blurb = styled(Text)`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst StyledHero = styled.div`\n  padding-bottom: 24px;\n  padding-top: 24px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n          <Title>Initial Dex Offering</Title>\n          <Blurb>Invest in Innovative Projects</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/layout/Container.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useRefresh.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useTheme.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/web3.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/contexts/Localisation/translationsContext.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/translateTextHelpers.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/localisation/languageCodes.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/Metamask.tsx",["714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732"],"import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\nimport { usePriceCakeBusd } from '../../../state/hooks'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport { getCakeAddress } from '../../../utils/addressHelpers'\nimport useAllEarnings from '../../../hooks/useAllEarnings'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\nbackground-image: url('/images/egg/meta.png');\nbackground-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n \n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst TokenImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0px;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 0px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst token = getCakeAddress();\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const FarmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = FarmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  const addWatchJaguarToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: token,\n              symbol: 'honest',\n              decimals: '18',\n              image: '/logo.png',\n            },\n          },\n        })\n\n        if (wasAdded) {\n          console.log('Token was added')\n        }\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, [])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody margin={24}>\n        <Heading size=\"xl\" mb=\"24px\">\n          About Frog\n        </Heading>\n        <TokenImageWrapper>\n          <CardImage src=\"/images/egg/9.png\" alt=\"Farm honest logo\" width={60} height={60} />\n          <hr />\n          <Wrapper>\n            <Button as=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://app.gitbook.com/@honest-team/s/honestwork-farms/\" size=\"sm\">\n              Docs\n            </Button>\n            <Button as=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://app.gitbook.com/@honest-team/s/honestwork-farms/token/becoming-an-honest-farmer\" size=\"sm\">\n              Buy Now\n            </Button>\n          </Wrapper>\n        </TokenImageWrapper>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/Coming.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/components/IfoTabButtons/index.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/Divider.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Ifos/components/Title.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/FarmCard.tsx",["733"],"import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(45deg,\n  rgba(255, 0, 0, 1) 0%,\n  rgba(255, 154, 0, 1) 10%,\n  rgba(208, 222, 33, 1) 20%,\n  rgba(79, 220, 74, 1) 30%,\n  rgba(63, 218, 216, 1) 40%,\n  rgba(47, 201, 226, 1) 50%,\n  rgba(28, 127, 238, 1) 60%,\n  rgba(95, 21, 242, 1) 70%,\n  rgba(186, 12, 248, 1) 80%,\n  rgba(251, 7, 217, 1) 90%,\n  rgba(255, 0, 0, 1) 100%);\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = 'Honest'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  })\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'Honest' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        risk={risk}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent='space-between' alignItems='center'>\n          <Text>{TranslateString(352, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  cakePrice={cakePrice}\n                  apy={farm.apy}\n                />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent='space-between'>\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          isTokenOnly={farm.isTokenOnly}\n          bscScanAddress={\n            farm.isTokenOnly ?\n              `https://explorer-mainnet.maticvigil.com/tokens/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n              :\n              `https://explorer-mainnet.maticvigil.com/tokens/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\n          }\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/FarmCard.tsx",["734"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/FarmCard.tsx",["735"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/FarmCard.tsx",["736","737","738","739","740","741","742"],"import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(45deg,\n  rgba(255, 0, 0, 1) 0%,\n  rgba(255, 154, 0, 1) 10%,\n  rgba(208, 222, 33, 1) 20%,\n  rgba(79, 220, 74, 1) 30%,\n  rgba(63, 218, 216, 1) 40%,\n  rgba(47, 201, 226, 1) 50%,\n  rgba(28, 127, 238, 1) 60%,\n  rgba(95, 21, 242, 1) 70%,\n  rgba(186, 12, 248, 1) 80%,\n  rgba(251, 7, 217, 1) 90%,\n  rgba(255, 0, 0, 1) 100%);\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\nalign-self: baseline;\nbackground-image: url('/images/egg/farmcard.gif');\nbackground-size: cover;\n\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = 'HONEST'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  })\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'HONEST' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        risk={risk}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent='space-between' alignItems='center'>\n          <Text>{TranslateString(352, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  cakePrice={cakePrice}\n                  apy={farm.apy}\n                />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent='space-between'>\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n   \n    \n    </FCard>\n  )\n}\n\nexport default FarmCard\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/Divider.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/PoolCard.tsx",["743","744","745"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSmartStake } from 'hooks/useStake'\nimport { useSmartUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSmartChefHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n    burnFee,\n    weeklyroi\n  } = pool\n\n  console.log(\"burnFee\",burnFee)\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress[CHAIN_ID])\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSmartStake(sousId, isBnbPool)\n  const { onUnstake } = useSmartUnstake(sousId)\n  const { onReward } = useSmartChefHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n      burnFeeBP={burnFee * 10}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished}>\n      {isFinished && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/bnbpool/${tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance\n              value={getBalanceNumber(earnings, tokenDecimals)}\n              decimals={tokenName === 'BTCB' ? 5 : 3}\n              isDisabled={isFinished}\n            />\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  Approve\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>Weekly ROI:</div>\n          {weeklyroi}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🐘 {' '}\n            </span>\n            Your Stake:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n        {burnFee > 0 ? (\n          <StyledDetails>\n            <div style={{ flex: 1 }}>\n              <span role=\"img\" aria-label={stakingTokenName}>\n                🔥{' '}\n              </span>\n              Deposit fee (Burned):\n            </div>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={burnFee / 10} decimals={1} unit=\"%\" />\n          </StyledDetails>\n        ) : (\n          ''\n        )}\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n        unit=\"blocks\"\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n  padding: 3px 0;\n`\n\nexport default PoolCard\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/TwitterCard.tsx",["746","747","748","749","750","751","752","753","754"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/TotalValueLockedCard.tsx",["755","756"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useGetStats } from 'hooks/api'\nimport { useTotalValue } from '../../../state/hooks'\nimport CardValue from './CardValue'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n\n\nbackground: linear-gradient(135deg, orange 60%, cyan);\nbackground-image: url('/images/egg/tvl.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n    min-width: 10%;\n  min-height: 10%;\n  width: 10%;\n  height: 100%;\n  \n  align-items: center;\n  display: flex;\n  flex: 2;\n`\n\n\nconst TotalValueLockedCard = () => {\n  const TranslateString = useI18n()\n  // const data = useGetStats()\n  const totalValue = useTotalValue();\n  const tvl = totalValue.toNumber();\n  const realValue = tvl;\n  // const tvl = totalValue.toFixed(2);\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          {TranslateString(999, 'Total Value Locked (TVL)')}\n        </Heading>\n        <>\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\n          {/* <Heading size=\"xl\"> */}\n            <CardValue value={realValue} prefix=\"$\" decimals={2}/>\n          {/* </Heading> */}\n          <Text color=\"textSubtle\">Across All Barns</Text>\n        </>\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/FarmStakingCard.tsx",["757","758"],"import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\nimport useAllEarnings from '../../../hooks/useAllEarnings'\nimport { usePriceCakeBusd } from '../../../state/hooks'\nimport { getCakeAddress } from '../../../utils/addressHelpers'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\nbackground-image: url('/images/egg/mod.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n    min-width: 10%;\n  min-height: 10%;\n  width: 10%;\n  height: 100%;\n  center: right;\n  \n \n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()))\n  const eggPrice = usePriceCakeBusd().toNumber()\n  const earningsSum = farmsWithBalance.reduce((accum, farm) => {\n    return accum + new BigNumber(farm.balance).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody margin={24}>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Farms & Staking')}\n        </Heading>\n        \n        <Block>\n          <Label>Frog to Harvest</Label>\n          <CakeHarvestBalance earningsSum={earningsSum}/>\n          <Label>~${(eggPrice * earningsSum).toFixed(2)}</Label>\n        </Block>\n        <Block>\n          <Label>Frog in Wallet</Label>\n          <CakeWalletBalance cakeBalance={cakeBalance} />\n          <Label>~${(eggPrice * cakeBalance).toFixed(2)}</Label>\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              \n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting EGG')\n                : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\n            </Button>\n          ) : (\n            <UnlockButton  />\n          )}\n        </Actions>\n        <Heading size=\"s\" mb=\"24px\">\n          ...\n        </Heading>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CakeStats.tsx",["759","760","761","762"],"import React, {useCallback} from 'react'\nimport { Card, CardBody, Heading, Text, LinkExternal, Button } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { useFarms, usePriceCakeBusd, usePriceCakeBnb } from '../../../state/hooks'\nimport rug from  './rug.png'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  background-image: url('/images/egg/stats.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n    min-width: 10%;\n  min-height: 10%;\n  width: 100%;\n  height: auto;\n  \n  \n  \n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0px;\n  justify-content: 'space-between';\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst token = getCakeAddress();\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const farms = useFarms();\n  const eggPrice = usePriceCakeBusd();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const marketCap = eggPrice.times(circSupply);\n  let honestPerBlock = 0;\n  const burnValue = eggPrice.times(burnedBalance);\n  const cakePrice = usePriceCakeBusd();\n  if(farms && farms[0] && farms[0].honestPerBlock){\n    honestPerBlock = new BigNumber(farms[0].honestPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  }\n\n  const addWatchJaguarToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: token,\n              symbol: 'honest',\n              decimals: '18',\n              image: '/logo.png',\n            },\n          },\n        })\n\n        if (wasAdded) {\n          console.log('Token was added')\n        }\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, [])\n\n\n  return (\n    <StyledCakeStats>\n      <CardBody margin={24}>\n        <Heading size=\"xl\" mb=\"24px\">\n        Frog Stats\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">honest Price</Text>\n          <CardValue fontSize=\"14px\" value={eggPrice.toNumber()} decimals={2} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Total Supply</Text>\n          <Text bold fontSize=\"14px\">{getBalanceNumber(totalSupply)}</Text>\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Circulating Supply</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Tokens to be farmed</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\n        </Row>\n        \n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(999, 'Market Cap')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\"> Frog/block</Text>\n          <Text bold fontSize=\"14px\">{honestPerBlock}</Text>\n        </Row>\n        <Row style={{marginTop: '24px'}}>\n          <LinkExternal small href={`https://polygonscan.com/token/${token}`}>\n            {token}\n          </LinkExternal>\n        </Row>\n        <Wrapper>\n          <a href=\"https://rugdoc.io/project/honest-farms/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img width=\"155px\" src={rug} alt=\"rug\"/>\n          </a>\n          <Button onClick={addWatchJaguarToken} size=\"sm\">\n            + Add Frog to <img style={{ marginLeft: 8 }} width={16} src=\"https://jaguarswap.com/images/tokens/metamask.png\" alt=\"metamask logo\" />\n          </Button>\n          </Wrapper>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/pools/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/farms/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/formatBalance.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmTabButtons/index.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useBlock.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/Card.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/layout/Flex.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/CardTitle.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/PoolTabButtons/index.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/ApyButton.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/CardHeading.tsx",["763","764","765","766"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\nimport { CommunityTag, CoreTag, RiskTag, NoFeeTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  risk?: number\n  depositFee?: number\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  risk,\n  farmImage,\n  tokenSymbol,\n  depositFee,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n          {depositFee === 0 ? <NoFeeTag /> : null}\n          {/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}\n          {/* <RiskTag risk={risk} /> */}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/CardActionsContainer.tsx",["767"],"import React, { useMemo, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport { useApprove } from 'hooks/useApprove'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpContract = useMemo(() => {\n    if(isTokenOnly){\n      return getContract(ethereum as provider, tokenAddress);\n    }\n    return getContract(ethereum as provider, lpAddress);\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} depositFeeBP={depositFeeBP} />\n    ) : (\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(999, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          Honest\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/ApyButton.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/CardActionsContainer.tsx",["768"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/CardHeading.tsx",["769","770","771","772"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/CardFooter.tsx",["773","774"],"import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n  unit?: string\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n  unit,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(411, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} unit={unit} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CardValue.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/pools/fetchPoolsUser.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/pools/fetchPools.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/farms/fetchFarmUser.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/state/farms/fetchFarms.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Tags.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/addressHelpers.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useTokenBalance.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/ApyCalculatorModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/HarvestAction.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/StakeAction.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/HarvestAction.tsx",["775"],"import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport useStake from '../../../../hooks/useStake'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { onStake } = useStake(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb='8px' justifyContent='space-between' alignItems='center'>\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <BalanceAndCompound>\n\n        <Button\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          {TranslateString(999, 'Harvest')}\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/FarmCard/StakeAction.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/pools.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CakeWalletBalance.tsx",["776","777","778"],"import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport CardValue from './CardValue'\n\nconst CakeWalletBalance = ({cakeBalance}) => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return <CardValue value={cakeBalance} fontSize=\"24px\" />\n}\n\nexport default CakeWalletBalance\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CakeHarvestBalance.tsx",["779","780"],"import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport CardValue from './CardValue'\n\nconst CakeHarvestBalance = ({earningsSum}) => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '60px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return <CardValue value={earningsSum} />\n}\n\nexport default CakeHarvestBalance\n","/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/ifo.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/farms.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useApprove.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useStake.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/erc20.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/UnlockButton.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Balance.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/multicall.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/WithdrawModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/WithdrawModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/components/DepositModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/config/constants/contracts.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/DepositModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useContract.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/compoundApyHelpers.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useUnstake.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useHarvest.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/getLiquidityUrlPathParts.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/utils/callHelpers.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useWeb3.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/TokenInput/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/ModalActions/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/ModalActions/ModalActions.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/TokenInput/TokenInput.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Input/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Spacer/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Spacer/Spacer.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Input/Input.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/HarvestButton.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/OldSyrupTitle.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/WithdrawModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/DepositModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Teaser/components/FarmCard/DetailsSection.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/CardActionsContainer.tsx",["781"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/ApyButton.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/CardHeading.tsx",["782","783","784","785"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/DetailsSection.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/ApyButton.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/CardActionsContainer.tsx",["786"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/CardHeading.tsx",["787","788","789","790"],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/DetailsSection.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useFarmsWithBalance.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/HarvestAction.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/StakeAction.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/FarmCard/ApyCalculatorModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/ApyCalculatorModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/StakeAction.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/FarmCard/HarvestAction.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Label/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/ExpandableSectionButton/index.ts",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/DepositModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Liquidity/components/WithdrawModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/DepositModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/BuyNow/components/WithdrawModal.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/Label/Label.tsx",[],"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx",[],{"ruleId":"791","replacedBy":"792"},{"ruleId":"793","replacedBy":"794"},{"ruleId":"795","replacedBy":"796"},{"ruleId":"797","replacedBy":"798"},{"ruleId":"799","replacedBy":"800"},{"ruleId":"801","severity":1,"message":"802","line":2,"column":35,"nodeType":"803","messageId":"804","endLine":2,"endColumn":43},{"ruleId":"801","severity":1,"message":"805","line":4,"column":20,"nodeType":"803","messageId":"804","endLine":4,"endColumn":25},{"ruleId":"801","severity":1,"message":"806","line":19,"column":7,"nodeType":"803","messageId":"804","endLine":19,"endColumn":10},{"ruleId":"801","severity":1,"message":"807","line":3,"column":10,"nodeType":"803","messageId":"804","endLine":3,"endColumn":16},{"ruleId":"801","severity":1,"message":"808","line":3,"column":18,"nodeType":"803","messageId":"804","endLine":3,"endColumn":25},{"ruleId":"801","severity":1,"message":"809","line":3,"column":27,"nodeType":"803","messageId":"804","endLine":3,"endColumn":31},{"ruleId":"801","severity":1,"message":"810","line":3,"column":57,"nodeType":"803","messageId":"804","endLine":3,"endColumn":61},{"ruleId":"801","severity":1,"message":"811","line":15,"column":7,"nodeType":"803","messageId":"804","endLine":15,"endColumn":25},{"ruleId":"801","severity":1,"message":"812","line":31,"column":9,"nodeType":"803","messageId":"804","endLine":31,"endColumn":24},{"ruleId":"801","severity":1,"message":"813","line":2,"column":21,"nodeType":"803","messageId":"804","endLine":2,"endColumn":28},{"ruleId":"801","severity":1,"message":"814","line":5,"column":37,"nodeType":"803","messageId":"804","endLine":5,"endColumn":62},{"ruleId":"801","severity":1,"message":"815","line":107,"column":9,"nodeType":"803","messageId":"804","endLine":107,"endColumn":18},{"ruleId":"801","severity":1,"message":"816","line":13,"column":11,"nodeType":"803","messageId":"804","endLine":13,"endColumn":17},{"ruleId":"801","severity":1,"message":"817","line":13,"column":19,"nodeType":"803","messageId":"804","endLine":13,"endColumn":30},{"ruleId":"801","severity":1,"message":"818","line":2,"column":10,"nodeType":"803","messageId":"804","endLine":2,"endColumn":15},{"ruleId":"801","severity":1,"message":"819","line":7,"column":8,"nodeType":"803","messageId":"804","endLine":7,"endColumn":15},{"ruleId":"801","severity":1,"message":"820","line":8,"column":8,"nodeType":"803","messageId":"804","endLine":8,"endColumn":18},{"ruleId":"801","severity":1,"message":"821","line":11,"column":11,"nodeType":"803","messageId":"804","endLine":11,"endColumn":15},{"ruleId":"801","severity":1,"message":"822","line":33,"column":7,"nodeType":"803","messageId":"804","endLine":33,"endColumn":43},{"ruleId":"823","severity":1,"message":"824","line":60,"column":7,"nodeType":"825","messageId":"826","endLine":60,"endColumn":18},{"ruleId":"801","severity":1,"message":"805","line":4,"column":10,"nodeType":"803","messageId":"804","endLine":4,"endColumn":15},{"ruleId":"801","severity":1,"message":"808","line":4,"column":17,"nodeType":"803","messageId":"804","endLine":4,"endColumn":24},{"ruleId":"801","severity":1,"message":"809","line":4,"column":26,"nodeType":"803","messageId":"804","endLine":4,"endColumn":30},{"ruleId":"801","severity":1,"message":"827","line":8,"column":8,"nodeType":"803","messageId":"804","endLine":8,"endColumn":13},{"ruleId":"801","severity":1,"message":"828","line":10,"column":10,"nodeType":"803","messageId":"804","endLine":10,"endColumn":19},{"ruleId":"801","severity":1,"message":"829","line":13,"column":8,"nodeType":"803","messageId":"804","endLine":13,"endColumn":19},{"ruleId":"801","severity":1,"message":"830","line":14,"column":8,"nodeType":"803","messageId":"804","endLine":14,"endColumn":19},{"ruleId":"801","severity":1,"message":"831","line":15,"column":8,"nodeType":"803","messageId":"804","endLine":15,"endColumn":21},{"ruleId":"801","severity":1,"message":"832","line":16,"column":8,"nodeType":"803","messageId":"804","endLine":16,"endColumn":15},{"ruleId":"801","severity":1,"message":"833","line":19,"column":7,"nodeType":"803","messageId":"804","endLine":19,"endColumn":11},{"ruleId":"801","severity":1,"message":"834","line":71,"column":7,"nodeType":"803","messageId":"804","endLine":71,"endColumn":15},{"ruleId":"801","severity":1,"message":"812","line":113,"column":9,"nodeType":"803","messageId":"804","endLine":113,"endColumn":24},{"ruleId":"801","severity":1,"message":"835","line":114,"column":9,"nodeType":"803","messageId":"804","endLine":114,"endColumn":16},{"ruleId":"801","severity":1,"message":"836","line":115,"column":9,"nodeType":"803","messageId":"804","endLine":115,"endColumn":13},{"ruleId":"801","severity":1,"message":"812","line":28,"column":9,"nodeType":"803","messageId":"804","endLine":28,"endColumn":24},{"ruleId":"801","severity":1,"message":"805","line":7,"column":10,"nodeType":"803","messageId":"804","endLine":7,"endColumn":15},{"ruleId":"801","severity":1,"message":"837","line":7,"column":26,"nodeType":"803","messageId":"804","endLine":7,"endColumn":38},{"ruleId":"801","severity":1,"message":"838","line":7,"column":40,"nodeType":"803","messageId":"804","endLine":7,"endColumn":44},{"ruleId":"801","severity":1,"message":"839","line":8,"column":27,"nodeType":"803","messageId":"804","endLine":8,"endColumn":41},{"ruleId":"801","severity":1,"message":"840","line":8,"column":43,"nodeType":"803","messageId":"804","endLine":8,"endColumn":56},{"ruleId":"801","severity":1,"message":"841","line":19,"column":8,"nodeType":"803","messageId":"804","endLine":19,"endColumn":11},{"ruleId":"801","severity":1,"message":"812","line":27,"column":9,"nodeType":"803","messageId":"804","endLine":27,"endColumn":24},{"ruleId":"801","severity":1,"message":"818","line":2,"column":10,"nodeType":"803","messageId":"804","endLine":2,"endColumn":15},{"ruleId":"801","severity":1,"message":"805","line":7,"column":10,"nodeType":"803","messageId":"804","endLine":7,"endColumn":15},{"ruleId":"801","severity":1,"message":"808","line":7,"column":17,"nodeType":"803","messageId":"804","endLine":7,"endColumn":24},{"ruleId":"801","severity":1,"message":"839","line":8,"column":27,"nodeType":"803","messageId":"804","endLine":8,"endColumn":41},{"ruleId":"801","severity":1,"message":"840","line":8,"column":43,"nodeType":"803","messageId":"804","endLine":8,"endColumn":56},{"ruleId":"801","severity":1,"message":"842","line":9,"column":8,"nodeType":"803","messageId":"804","endLine":9,"endColumn":18},{"ruleId":"801","severity":1,"message":"843","line":17,"column":8,"nodeType":"803","messageId":"804","endLine":17,"endColumn":22},{"ruleId":"801","severity":1,"message":"844","line":18,"column":8,"nodeType":"803","messageId":"804","endLine":18,"endColumn":15},{"ruleId":"801","severity":1,"message":"821","line":25,"column":11,"nodeType":"803","messageId":"804","endLine":25,"endColumn":15},{"ruleId":"801","severity":1,"message":"812","line":26,"column":9,"nodeType":"803","messageId":"804","endLine":26,"endColumn":24},{"ruleId":"801","severity":1,"message":"845","line":41,"column":10,"nodeType":"803","messageId":"804","endLine":41,"endColumn":20},{"ruleId":"801","severity":1,"message":"846","line":41,"column":22,"nodeType":"803","messageId":"804","endLine":41,"endColumn":35},{"ruleId":"801","severity":1,"message":"847","line":44,"column":9,"nodeType":"803","messageId":"804","endLine":44,"endColumn":22},{"ruleId":"801","severity":1,"message":"848","line":46,"column":9,"nodeType":"803","messageId":"804","endLine":46,"endColumn":24},{"ruleId":"801","severity":1,"message":"849","line":53,"column":9,"nodeType":"803","messageId":"804","endLine":53,"endColumn":18},{"ruleId":"801","severity":1,"message":"818","line":2,"column":10,"nodeType":"803","messageId":"804","endLine":2,"endColumn":15},{"ruleId":"801","severity":1,"message":"805","line":7,"column":10,"nodeType":"803","messageId":"804","endLine":7,"endColumn":15},{"ruleId":"801","severity":1,"message":"808","line":7,"column":17,"nodeType":"803","messageId":"804","endLine":7,"endColumn":24},{"ruleId":"801","severity":1,"message":"839","line":8,"column":27,"nodeType":"803","messageId":"804","endLine":8,"endColumn":41},{"ruleId":"801","severity":1,"message":"840","line":8,"column":43,"nodeType":"803","messageId":"804","endLine":8,"endColumn":56},{"ruleId":"801","severity":1,"message":"842","line":9,"column":8,"nodeType":"803","messageId":"804","endLine":9,"endColumn":18},{"ruleId":"801","severity":1,"message":"843","line":17,"column":8,"nodeType":"803","messageId":"804","endLine":17,"endColumn":22},{"ruleId":"801","severity":1,"message":"844","line":18,"column":8,"nodeType":"803","messageId":"804","endLine":18,"endColumn":15},{"ruleId":"801","severity":1,"message":"821","line":25,"column":11,"nodeType":"803","messageId":"804","endLine":25,"endColumn":15},{"ruleId":"801","severity":1,"message":"812","line":26,"column":9,"nodeType":"803","messageId":"804","endLine":26,"endColumn":24},{"ruleId":"801","severity":1,"message":"845","line":41,"column":10,"nodeType":"803","messageId":"804","endLine":41,"endColumn":20},{"ruleId":"801","severity":1,"message":"846","line":41,"column":22,"nodeType":"803","messageId":"804","endLine":41,"endColumn":35},{"ruleId":"801","severity":1,"message":"847","line":44,"column":9,"nodeType":"803","messageId":"804","endLine":44,"endColumn":22},{"ruleId":"801","severity":1,"message":"848","line":46,"column":9,"nodeType":"803","messageId":"804","endLine":46,"endColumn":24},{"ruleId":"801","severity":1,"message":"849","line":53,"column":9,"nodeType":"803","messageId":"804","endLine":53,"endColumn":18},{"ruleId":"801","severity":1,"message":"818","line":3,"column":10,"nodeType":"803","messageId":"804","endLine":3,"endColumn":15},{"ruleId":"801","severity":1,"message":"805","line":8,"column":10,"nodeType":"803","messageId":"804","endLine":8,"endColumn":15},{"ruleId":"801","severity":1,"message":"839","line":9,"column":27,"nodeType":"803","messageId":"804","endLine":9,"endColumn":41},{"ruleId":"801","severity":1,"message":"840","line":9,"column":43,"nodeType":"803","messageId":"804","endLine":9,"endColumn":56},{"ruleId":"801","severity":1,"message":"842","line":10,"column":8,"nodeType":"803","messageId":"804","endLine":10,"endColumn":18},{"ruleId":"801","severity":1,"message":"843","line":18,"column":8,"nodeType":"803","messageId":"804","endLine":18,"endColumn":22},{"ruleId":"801","severity":1,"message":"844","line":19,"column":8,"nodeType":"803","messageId":"804","endLine":19,"endColumn":15},{"ruleId":"801","severity":1,"message":"821","line":26,"column":11,"nodeType":"803","messageId":"804","endLine":26,"endColumn":15},{"ruleId":"801","severity":1,"message":"812","line":27,"column":9,"nodeType":"803","messageId":"804","endLine":27,"endColumn":24},{"ruleId":"801","severity":1,"message":"845","line":42,"column":10,"nodeType":"803","messageId":"804","endLine":42,"endColumn":20},{"ruleId":"801","severity":1,"message":"846","line":42,"column":22,"nodeType":"803","messageId":"804","endLine":42,"endColumn":35},{"ruleId":"801","severity":1,"message":"847","line":45,"column":9,"nodeType":"803","messageId":"804","endLine":45,"endColumn":22},{"ruleId":"801","severity":1,"message":"848","line":47,"column":9,"nodeType":"803","messageId":"804","endLine":47,"endColumn":24},{"ruleId":"801","severity":1,"message":"849","line":75,"column":9,"nodeType":"803","messageId":"804","endLine":75,"endColumn":18},{"ruleId":"801","severity":1,"message":"805","line":3,"column":65,"nodeType":"803","messageId":"804","endLine":3,"endColumn":70},{"ruleId":"801","severity":1,"message":"850","line":82,"column":7,"nodeType":"803","messageId":"804","endLine":82,"endColumn":16},{"ruleId":"801","severity":1,"message":"812","line":24,"column":9,"nodeType":"803","messageId":"804","endLine":24,"endColumn":24},{"ruleId":"801","severity":1,"message":"837","line":3,"column":43,"nodeType":"803","messageId":"804","endLine":3,"endColumn":55},{"ruleId":"801","severity":1,"message":"838","line":3,"column":57,"nodeType":"803","messageId":"804","endLine":3,"endColumn":61},{"ruleId":"801","severity":1,"message":"851","line":5,"column":8,"nodeType":"803","messageId":"804","endLine":5,"endColumn":17},{"ruleId":"801","severity":1,"message":"852","line":9,"column":8,"nodeType":"803","messageId":"804","endLine":9,"endColumn":20},{"ruleId":"801","severity":1,"message":"853","line":10,"column":8,"nodeType":"803","messageId":"804","endLine":10,"endColumn":26},{"ruleId":"801","severity":1,"message":"854","line":11,"column":8,"nodeType":"803","messageId":"804","endLine":11,"endColumn":25},{"ruleId":"801","severity":1,"message":"855","line":12,"column":10,"nodeType":"803","messageId":"804","endLine":12,"endColumn":26},{"ruleId":"801","severity":1,"message":"856","line":13,"column":8,"nodeType":"803","messageId":"804","endLine":13,"endColumn":23},{"ruleId":"801","severity":1,"message":"857","line":15,"column":8,"nodeType":"803","messageId":"804","endLine":15,"endColumn":22},{"ruleId":"801","severity":1,"message":"858","line":16,"column":10,"nodeType":"803","messageId":"804","endLine":16,"endColumn":26},{"ruleId":"801","severity":1,"message":"859","line":26,"column":7,"nodeType":"803","messageId":"804","endLine":26,"endColumn":12},{"ruleId":"801","severity":1,"message":"860","line":46,"column":7,"nodeType":"803","messageId":"804","endLine":46,"endColumn":12},{"ruleId":"801","severity":1,"message":"861","line":51,"column":7,"nodeType":"803","messageId":"804","endLine":51,"endColumn":14},{"ruleId":"801","severity":1,"message":"862","line":58,"column":10,"nodeType":"803","messageId":"804","endLine":58,"endColumn":19},{"ruleId":"801","severity":1,"message":"863","line":59,"column":11,"nodeType":"803","messageId":"804","endLine":59,"endColumn":18},{"ruleId":"801","severity":1,"message":"812","line":60,"column":9,"nodeType":"803","messageId":"804","endLine":60,"endColumn":24},{"ruleId":"801","severity":1,"message":"864","line":66,"column":9,"nodeType":"803","messageId":"804","endLine":66,"endColumn":24},{"ruleId":"801","severity":1,"message":"865","line":77,"column":9,"nodeType":"803","messageId":"804","endLine":77,"endColumn":28},{"ruleId":"823","severity":1,"message":"824","line":98,"column":11,"nodeType":"825","messageId":"826","endLine":98,"endColumn":22},{"ruleId":"801","severity":1,"message":"866","line":5,"column":10,"nodeType":"803","messageId":"804","endLine":5,"endColumn":24},{"ruleId":"801","severity":1,"message":"866","line":5,"column":10,"nodeType":"803","messageId":"804","endLine":5,"endColumn":24},{"ruleId":"801","severity":1,"message":"866","line":5,"column":10,"nodeType":"803","messageId":"804","endLine":5,"endColumn":24},{"ruleId":"801","severity":1,"message":"866","line":5,"column":10,"nodeType":"803","messageId":"804","endLine":5,"endColumn":24},{"ruleId":"801","severity":1,"message":"867","line":9,"column":8,"nodeType":"803","messageId":"804","endLine":9,"endColumn":31},{"ruleId":"801","severity":1,"message":"868","line":11,"column":8,"nodeType":"803","messageId":"804","endLine":11,"endColumn":22},{"ruleId":"801","severity":1,"message":"869","line":79,"column":7,"nodeType":"803","messageId":"804","endLine":79,"endColumn":23},{"ruleId":"801","severity":1,"message":"870","line":96,"column":10,"nodeType":"803","messageId":"804","endLine":96,"endColumn":31},{"ruleId":"801","severity":1,"message":"871","line":96,"column":33,"nodeType":"803","messageId":"804","endLine":96,"endColumn":57},{"ruleId":"801","severity":1,"message":"872","line":117,"column":9,"nodeType":"803","messageId":"804","endLine":117,"endColumn":27},{"ruleId":"801","severity":1,"message":"873","line":40,"column":5,"nodeType":"803","messageId":"804","endLine":40,"endColumn":10},{"ruleId":"801","severity":1,"message":"874","line":46,"column":5,"nodeType":"803","messageId":"804","endLine":46,"endColumn":8},{"ruleId":"823","severity":1,"message":"824","line":59,"column":3,"nodeType":"825","messageId":"826","endLine":59,"endColumn":14},{"ruleId":"801","severity":1,"message":"809","line":2,"column":53,"nodeType":"803","messageId":"804","endLine":2,"endColumn":57},{"ruleId":"801","severity":1,"message":"851","line":3,"column":8,"nodeType":"803","messageId":"804","endLine":3,"endColumn":17},{"ruleId":"801","severity":1,"message":"858","line":6,"column":10,"nodeType":"803","messageId":"804","endLine":6,"endColumn":26},{"ruleId":"801","severity":1,"message":"875","line":7,"column":10,"nodeType":"803","messageId":"804","endLine":7,"endColumn":24},{"ruleId":"801","severity":1,"message":"876","line":7,"column":26,"nodeType":"803","messageId":"804","endLine":7,"endColumn":42},{"ruleId":"801","severity":1,"message":"877","line":9,"column":10,"nodeType":"803","messageId":"804","endLine":9,"endColumn":24},{"ruleId":"801","severity":1,"message":"878","line":10,"column":8,"nodeType":"803","messageId":"804","endLine":10,"endColumn":17},{"ruleId":"801","severity":1,"message":"879","line":11,"column":10,"nodeType":"803","messageId":"804","endLine":11,"endColumn":18},{"ruleId":"801","severity":1,"message":"880","line":28,"column":7,"nodeType":"803","messageId":"804","endLine":28,"endColumn":10},{"ruleId":"801","severity":1,"message":"881","line":3,"column":35,"nodeType":"803","messageId":"804","endLine":3,"endColumn":43},{"ruleId":"801","severity":1,"message":"882","line":5,"column":10,"nodeType":"803","messageId":"804","endLine":5,"endColumn":21},{"ruleId":"801","severity":1,"message":"857","line":12,"column":8,"nodeType":"803","messageId":"804","endLine":12,"endColumn":22},{"ruleId":"801","severity":1,"message":"883","line":36,"column":7,"nodeType":"803","messageId":"804","endLine":36,"endColumn":16},{"ruleId":"801","severity":1,"message":"884","line":10,"column":38,"nodeType":"803","messageId":"804","endLine":10,"endColumn":53},{"ruleId":"801","severity":1,"message":"885","line":56,"column":9,"nodeType":"803","messageId":"804","endLine":56,"endColumn":18},{"ruleId":"801","severity":1,"message":"886","line":57,"column":9,"nodeType":"803","messageId":"804","endLine":57,"endColumn":18},{"ruleId":"823","severity":1,"message":"824","line":83,"column":11,"nodeType":"825","messageId":"826","endLine":83,"endColumn":22},{"ruleId":"801","severity":1,"message":"887","line":4,"column":10,"nodeType":"803","messageId":"804","endLine":4,"endColumn":22},{"ruleId":"801","severity":1,"message":"888","line":4,"column":24,"nodeType":"803","messageId":"804","endLine":4,"endColumn":31},{"ruleId":"801","severity":1,"message":"889","line":4,"column":33,"nodeType":"803","messageId":"804","endLine":4,"endColumn":40},{"ruleId":"801","severity":1,"message":"890","line":28,"column":3,"nodeType":"803","messageId":"804","endLine":28,"endColumn":7},{"ruleId":"801","severity":1,"message":"891","line":8,"column":26,"nodeType":"803","messageId":"804","endLine":8,"endColumn":43},{"ruleId":"801","severity":1,"message":"891","line":8,"column":26,"nodeType":"803","messageId":"804","endLine":8,"endColumn":43},{"ruleId":"801","severity":1,"message":"887","line":4,"column":10,"nodeType":"803","messageId":"804","endLine":4,"endColumn":22},{"ruleId":"801","severity":1,"message":"888","line":4,"column":24,"nodeType":"803","messageId":"804","endLine":4,"endColumn":31},{"ruleId":"801","severity":1,"message":"889","line":4,"column":33,"nodeType":"803","messageId":"804","endLine":4,"endColumn":40},{"ruleId":"801","severity":1,"message":"890","line":28,"column":3,"nodeType":"803","messageId":"804","endLine":28,"endColumn":7},{"ruleId":"801","severity":1,"message":"858","line":4,"column":10,"nodeType":"803","messageId":"804","endLine":4,"endColumn":26},{"ruleId":"801","severity":1,"message":"892","line":78,"column":3,"nodeType":"803","messageId":"804","endLine":78,"endColumn":14},{"ruleId":"801","severity":1,"message":"893","line":26,"column":11,"nodeType":"803","messageId":"804","endLine":26,"endColumn":18},{"ruleId":"801","severity":1,"message":"856","line":4,"column":8,"nodeType":"803","messageId":"804","endLine":4,"endColumn":23},{"ruleId":"801","severity":1,"message":"877","line":6,"column":10,"nodeType":"803","messageId":"804","endLine":6,"endColumn":24},{"ruleId":"801","severity":1,"message":"858","line":7,"column":10,"nodeType":"803","messageId":"804","endLine":7,"endColumn":26},{"ruleId":"801","severity":1,"message":"851","line":4,"column":8,"nodeType":"803","messageId":"804","endLine":4,"endColumn":17},{"ruleId":"801","severity":1,"message":"857","line":6,"column":8,"nodeType":"803","messageId":"804","endLine":6,"endColumn":22},{"ruleId":"801","severity":1,"message":"891","line":8,"column":26,"nodeType":"803","messageId":"804","endLine":8,"endColumn":43},{"ruleId":"801","severity":1,"message":"887","line":4,"column":10,"nodeType":"803","messageId":"804","endLine":4,"endColumn":22},{"ruleId":"801","severity":1,"message":"888","line":4,"column":24,"nodeType":"803","messageId":"804","endLine":4,"endColumn":31},{"ruleId":"801","severity":1,"message":"889","line":4,"column":33,"nodeType":"803","messageId":"804","endLine":4,"endColumn":40},{"ruleId":"801","severity":1,"message":"890","line":28,"column":3,"nodeType":"803","messageId":"804","endLine":28,"endColumn":7},{"ruleId":"801","severity":1,"message":"891","line":8,"column":26,"nodeType":"803","messageId":"804","endLine":8,"endColumn":43},{"ruleId":"801","severity":1,"message":"887","line":4,"column":10,"nodeType":"803","messageId":"804","endLine":4,"endColumn":22},{"ruleId":"801","severity":1,"message":"888","line":4,"column":24,"nodeType":"803","messageId":"804","endLine":4,"endColumn":31},{"ruleId":"801","severity":1,"message":"889","line":4,"column":33,"nodeType":"803","messageId":"804","endLine":4,"endColumn":40},{"ruleId":"801","severity":1,"message":"890","line":28,"column":3,"nodeType":"803","messageId":"804","endLine":28,"endColumn":7},"lines-around-directive",["894"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'Buy' is assigned a value but never used.","'Button' is defined but never used.","'Heading' is defined but never used.","'Text' is defined but never used.","'Link' is defined but never used.","'StyledLinkExternal' is assigned a value but never used.","'TranslateString' is assigned a value but never used.","'useMemo' is defined but never used.","'fetchPoolsPublicDataAsync' is defined but never used.","'wethPrice' is assigned a value but never used.","'isDark' is assigned a value but never used.","'toggleTheme' is assigned a value but never used.","'Route' is defined but never used.","'PastIfo' is defined but never used.","'ComingSoon' is defined but never used.","'path' is assigned a value but never used.","'fetchTranslationsForSelectedLanguage' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'rot13' is defined but never used.","'isAddress' is defined but never used.","'TwitterCard' is defined but never used.","'EarnAPRCard' is defined but never used.","'EarnAssetCard' is defined but never used.","'WinCard' is defined but never used.","'Hero' is assigned a value but never used.","'CTACards' is assigned a value but never used.","'cookies' is assigned a value but never used.","'aint' is assigned a value but never used.","'LinkExternal' is defined but never used.","'Flex' is defined but never used.","'CAKE_PER_BLOCK' is defined but never used.","'CAKE_POOL_PID' is defined but never used.","'fib' is defined but never used.","'FlexLayout' is defined but never used.","'FarmTabButtons' is defined but never used.","'Divider' is defined but never used.","'stakedOnly' is assigned a value but never used.","'setStakedOnly' is assigned a value but never used.","'inactiveFarms' is assigned a value but never used.","'stakedOnlyFarms' is assigned a value but never used.","'farmsList' is assigned a value but never used.","'activeIfo' is assigned a value but never used.","'BigNumber' is defined but never used.","'UnlockButton' is defined but never used.","'CakeHarvestBalance' is defined but never used.","'CakeWalletBalance' is defined but never used.","'usePriceCakeBusd' is defined but never used.","'useTokenBalance' is defined but never used.","'useAllEarnings' is defined but never used.","'getBalanceNumber' is defined but never used.","'Block' is assigned a value but never used.","'Label' is assigned a value but never used.","'Actions' is assigned a value but never used.","'pendingTx' is assigned a value but never used.","'account' is assigned a value but never used.","'harvestAllFarms' is assigned a value but never used.","'addWatchJaguarToken' is assigned a value but never used.","'communityFarms' is defined but never used.","'ExpandableSectionButton' is defined but never used.","'DetailsSection' is defined but never used.","'ExpandingWrapper' is assigned a value but never used.","'showExpandableSection' is assigned a value but never used.","'setShowExpandableSection' is assigned a value but never used.","'totalValueFormated' is assigned a value but never used.","'image' is assigned a value but never used.","'apy' is assigned a value but never used.","'useTotalSupply' is defined but never used.","'useBurnedBalance' is defined but never used.","'getCakeAddress' is defined but never used.","'CardValue' is defined but never used.","'useFarms' is defined but never used.","'Row' is assigned a value but never used.","'Skeleton' is defined but never used.","'useGetStats' is defined but never used.","'CardImage' is assigned a value but never used.","'usePriceCakeBnb' is defined but never used.","'burnValue' is assigned a value but never used.","'cakePrice' is assigned a value but never used.","'CommunityTag' is defined but never used.","'CoreTag' is defined but never used.","'RiskTag' is defined but never used.","'risk' is defined but never used.","'useFarmFromSymbol' is defined but never used.","'totalStaked' is defined but never used.","'onStake' is assigned a value but never used.","padding-line-between-statements"]